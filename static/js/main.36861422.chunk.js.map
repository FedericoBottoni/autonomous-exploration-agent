{"version":3,"sources":["TemplatePage.js","Panel.js","App.js","Description.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","color","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","title","HtmlTooltip","withStyles","tooltip","maxWidth","fontSize","typography","pxToRem","border","Tooltip","TemplatePage","menu","menuSecond","menuSelectedIndex","setMenuSelectedIndex","render","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","paper","direction","Divider","List","map","name","icon","id","placement","disableHoverListener","enterDelay","ListItem","button","key","selected","params","ListItemIcon","ListItemText","primary","href","container","paddingLeft","flexDirection","flex","paperRoot","paperRoot1","marginTop","row","lineOfSliders","lineOfSlidersAlone","sliderRoot","minWidth","sliderContainer","margin","height","infoBox","infoBoxColumn","table","borderSpacing","tdHead","td","marksObstacles","value","label","marksCollsion","marksTarget","marksPenalty","initialParams","Panel","unityContent","structured","contentId","rayActivated","toggleRay","camView","setCamView","lidars","dims3","environmentDescription","others","isLoading","setIsLoading","numObstacles","setNumObstacles","collisionRadious","setCollisionRadious","targetDistance","setTargetDistance","collisionPenalty","setCollisionPenalty","useEffect","on","setTimeout","updateParam","send","updateScene","Paper","elevation","gutterBottom","ToggleButtonGroup","ToggleButton","disabled","Slider","defaultValue","getAriaValueText","val","aria-labelledby","min","max","step","marks","valueLabelDisplay","onChange","_","onChangeCommitted","style","column","block","UnityContent","unityVersion","setMenuIndex","goTo","__","window","changeScene","scene","activateDraw","setRayActivated","activated","environmentDesc","requestMenuChange","canvasContainer","menuItem","find","x","current","canvas","htmlElement","children","getAttribute","setAttribute","getMenu","App","props","useRef","Element","fontWeight","indexOf","Page","ref","r","filter","checked","toggleCamView","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36861422.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst mainColor = 'rgb(243, 177, 69)';\r\nconst secondaryColor = '#45484a';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    backgroundColor: mainColor,\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    color: secondaryColor,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  title: {\r\n    color: secondaryColor\r\n  } \r\n}));\r\n\r\nconst HtmlTooltip = withStyles(theme => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nconst TemplatePage = ({ menu, menuSecond, menuSelectedIndex, setMenuSelectedIndex, render }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap className={classes.title}>\r\n            Autonomous Exploration Agent\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {menu.map(({ name, icon, id, onClick }) => (\r\n             <HtmlTooltip\r\n              placement=\"right\"\r\n              disableHoverListener={open}\r\n              enterDelay={100}\r\n              title={\r\n                <>\r\n                  <Typography>{name}</Typography>\r\n                </>\r\n              }\r\n            >\r\n              <ListItem button key={name}\r\n                selected={id === menuSelectedIndex}\r\n                onClick={(...params) => onClick(setMenuSelectedIndex, id, ...params)}\r\n              >\r\n              <ListItemIcon>{icon}</ListItemIcon>\r\n              <ListItemText primary={name} />\r\n            </ListItem>\r\n           </HtmlTooltip>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {menuSecond.map(({ name, icon, id, onClick, href }) => (\r\n             <HtmlTooltip\r\n              placement=\"right\"\r\n              disableHoverListener={open}\r\n              enterDelay={100}\r\n              title={\r\n                <>\r\n                  <Typography>{name}</Typography>\r\n                </>\r\n              }\r\n            >\r\n              <ListItem button key={name}\r\n                selected={id === menuSelectedIndex}\r\n                onClick={(...params) => onClick(setMenuSelectedIndex, id, href, ...params)}\r\n              >\r\n                <ListItemIcon>{icon}</ListItemIcon>\r\n                <ListItemText primary={name} />\r\n              </ListItem>\r\n            </HtmlTooltip>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {render()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TemplatePage;","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport Videocam from '@material-ui/icons/Videocam';\r\nimport VideocamOff from '@material-ui/icons/VideocamOff';\r\nimport LeakAdd from '@material-ui/icons/LeakAdd';\r\nimport LeakRemove from '@material-ui/icons/LeakRemove';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    paddingLeft: 24,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 2\r\n  },\r\n  paperRoot: {\r\n    width: '100%',\r\n    padding: '16px 0 16px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-around'\r\n  },\r\n  paperRoot1: {\r\n    width: '100%',\r\n    padding: '16px 8px 16px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-around',\r\n    marginTop: 24\r\n  },\r\n  row: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  lineOfSliders: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around'\r\n  },\r\n  lineOfSlidersAlone: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    marginLeft: 32,\r\n  },\r\n  sliderRoot: {\r\n    minWidth: 200,\r\n  },\r\n  sliderContainer: {\r\n    margin: 32,\r\n    width: '100%'\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n  infoBox: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  infoBoxColumn: {\r\n    width: '50%',\r\n    paddingLeft: 32\r\n  },\r\n  table: {\r\n    borderSpacing: 0,\r\n    marginTop: 4\r\n  },\r\n  tdHead: {\r\n    display: 'flex',\r\n    minWidth: 90\r\n  },\r\n  td: {\r\n  }\r\n}))\r\n\r\nconst updateScene = (unityContent, { numObstacles, collisionRadious, targetDistance, collisionPenalty }) => {\r\n  unityContent.send(\r\n    \"Academy\", \r\n    \"CustomAcademyReset\",\r\n    `${numObstacles}-1-${collisionRadious}-${targetDistance}-${collisionPenalty}`\r\n  );\r\n}\r\n\r\nconst marksObstacles = [\r\n  {\r\n    value: 0,\r\n    label: '0',\r\n  },\r\n  {\r\n    value: 5,\r\n    label: '5',\r\n  },\r\n  {\r\n    value: 10,\r\n    label: '10',\r\n  },\r\n  {\r\n    value: 15,\r\n    label: '15',\r\n  },\r\n  {\r\n    value: 20,\r\n    label: '20',\r\n  },\r\n];\r\n\r\nconst marksCollsion = [\r\n  {\r\n    value: 2,\r\n    label: '2',\r\n  },\r\n  {\r\n    value: 4,\r\n    label: '4',\r\n  },\r\n  {\r\n    value: 6,\r\n    label: '6',\r\n  },\r\n  {\r\n    value: 8,\r\n    label: '8',\r\n  },\r\n];\r\n\r\nconst marksTarget = [\r\n  {\r\n    value: 10,\r\n    label: '10',\r\n  },\r\n  {\r\n    value: 20,\r\n    label: '20',\r\n  },\r\n  {\r\n    value: 30,\r\n    label: '30',\r\n  },\r\n  {\r\n    value: 40,\r\n    label: '40',\r\n  },\r\n];\r\n\r\n\r\nconst marksPenalty = [\r\n  {\r\n    value: 0,\r\n    label: '0',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: '1',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: '2',\r\n  },\r\n  {\r\n    value: 3,\r\n    label: '3',\r\n  },\r\n  {\r\n    value: 4,\r\n    label: '4',\r\n  },\r\n  {\r\n    value: 5,\r\n    label: '5',\r\n  },\r\n];\r\n\r\nconst initialParams = {\r\n  numObstacles: 10,\r\n  collisionRadious: 2,\r\n  targetDistance: 30,\r\n  collisionPenalty: 0.3\r\n};\r\n\r\nconst Panel = ({ unityContent, structured, contentId, rayActivated, toggleRay, camView, setCamView, lidars, dims3, environmentDescription, ...others }) => { \r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [numObstacles, setNumObstacles] = useState(initialParams.numObstacles);\r\n  const [collisionRadious, setCollisionRadious] = useState(initialParams.collisionRadious);\r\n  const [targetDistance, setTargetDistance] = useState(initialParams.targetDistance);\r\n  const [collisionPenalty, setCollisionPenalty] = useState(initialParams.collisionPenalty);\r\n\r\n  useEffect(() => {\r\n    unityContent.on(\"loaded\", () => {\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 2400)\r\n    });\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setNumObstacles(initialParams.numObstacles);\r\n    setCollisionRadious(initialParams.collisionRadious);\r\n    setTargetDistance(initialParams.targetDistance);\r\n    setCollisionPenalty(initialParams.collisionPenalty);\r\n  }, [contentId]);\r\n  \r\n  const params = {\r\n    numObstacles,\r\n    collisionRadious,\r\n    targetDistance,\r\n    collisionPenalty\r\n  };\r\n\r\n  const updateParam = () => updateScene(unityContent, params)\r\n\r\n  return (<div className={classes.container}>\r\n    <Paper elevation={3} classes={{ root: classes.paperRoot }} {...others}>\r\n      <div className={classes.lineOfSlidersAlone}>\r\n          <Typography gutterBottom>\r\n            View controls\r\n          </Typography>\r\n          <ToggleButtonGroup value={[!camView ? 'nocam' : 'cam', !rayActivated && lidars ? 'noray' : 'ray',]}>\r\n              <ToggleButton disabled={isLoading || !lidars} value=\"ray\" onClick={() => toggleRay(!rayActivated)}>\r\n                {rayActivated || !lidars ?\r\n                  <Tooltip title=\"Turn off lidars\"><LeakAdd /></Tooltip>\r\n                :\r\n                  <Tooltip title=\"Turn on lidars\"><LeakRemove /></Tooltip>}\r\n              </ToggleButton>\r\n            <ToggleButton disabled={isLoading} value=\"cam\" onClick={() => setCamView(!camView)}>\r\n              {camView ?\r\n                <Tooltip title=\"Spectate agent\"><Videocam /></Tooltip>\r\n                : \r\n                <Tooltip title=\"Agent pov\"><VideocamOff /></Tooltip>}\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n      </div>\r\n      <div className={classes.lineOfSliders}>\r\n        <div className={classes.sliderContainer}>\r\n          <Typography gutterBottom>\r\n            Max obstacles\r\n          </Typography>\r\n          <Slider\r\n            classes={{ root: classes.sliderRoot }}\r\n            defaultValue={numObstacles}\r\n            value={numObstacles}\r\n            disabled={isLoading || structured}\r\n            getAriaValueText={val => val}\r\n            aria-labelledby=\"num_obstacles\"\r\n            min={0}\r\n            max={20}\r\n            step={1}\r\n            marks={marksObstacles}\r\n            valueLabelDisplay=\"auto\"\r\n            onChange={(_, value) => setNumObstacles(value)}\r\n            onChangeCommitted={updateParam}\r\n          />\r\n          <div className={classes.margin} />\r\n        </div>\r\n        <div className={classes.sliderContainer}>\r\n          <Typography gutterBottom>\r\n            Min spawn distance\r\n          </Typography>\r\n          <Slider\r\n            classes={{ root: classes.sliderRoot }}\r\n            defaultValue={collisionRadious}\r\n            value={collisionRadious}\r\n            disabled={isLoading || structured}\r\n            getAriaValueText={val => val}\r\n            aria-labelledby=\"collision_radious\"\r\n            min={2}\r\n            max={8}\r\n            step={0.5}\r\n            marks={marksCollsion}\r\n            valueLabelDisplay=\"auto\"\r\n            onChange={(_, value) => setCollisionRadious(value)}\r\n            onChangeCommitted={updateParam}\r\n          />\r\n          <div className={classes.margin} />\r\n        </div>\r\n      </div>\r\n      <div className={classes.lineOfSliders}>\r\n        <div className={classes.sliderContainer}>\r\n          <Typography gutterBottom>\r\n            Target distance\r\n          </Typography>\r\n          <Slider\r\n            classes={{ root: classes.sliderRoot }}\r\n            defaultValue={targetDistance}\r\n            value={targetDistance}\r\n            disabled={isLoading || structured}\r\n            getAriaValueText={val => val}\r\n            aria-labelledby=\"target_distance\"\r\n            min={10}\r\n            max={40}\r\n            step={2}\r\n            marks={marksTarget}\r\n            valueLabelDisplay=\"auto\"\r\n            onChange={(_, value) => setTargetDistance(value)}\r\n            onChangeCommitted={updateParam}\r\n          />\r\n          <div className={classes.margin} />\r\n        </div>\r\n        <div className={classes.sliderContainer}>\r\n          <Typography gutterBottom>\r\n           Collision penalty\r\n          </Typography>\r\n          <Slider\r\n            classes={{ root: classes.sliderRoot }}\r\n            defaultValue={collisionPenalty}\r\n            value={collisionPenalty}\r\n            disabled={isLoading || structured}\r\n            getAriaValueText={val => val}\r\n            aria-labelledby=\"collision_penalty\"\r\n            min={0}\r\n            max={5}\r\n            step={0.25}\r\n            marks={marksPenalty}\r\n            valueLabelDisplay=\"auto\"\r\n            onChange={(_, value) => setCollisionPenalty(value)}\r\n            onChangeCommitted={updateParam}\r\n          />\r\n          <div className={classes.margin} />\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n    <Paper elevation={3} classes={{ root: classes.paperRoot1 }} {...others}>\r\n      <div className={ classes.infoBox }>\r\n        <div className={ classes.infoBoxColumn }>\r\n          <strong>Agent</strong>\r\n          <table className={classes.table}>\r\n            <tr>\r\n              <td className={classes.tdHead}>Obs. type:</td>\r\n              <td className={classes.td}>{lidars ? \"LIDARs\" : \"CAMERA\"}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className={classes.tdHead}>Obs. space:</td>\r\n              <td className={classes.td}>{lidars ? (dims3 ? \"Vector of 42 distances (range 0-40u)\" : \"Vector of 14 distances (range 0-20u)\")  :\r\n                 \"84x84 RGB Matrix\"}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className={classes.tdHead}>Action space:</td>\r\n              <td className={classes.td}>{dims3 ? \"Forward, Side, Up, Yaw, Pitch in {-1,0,1}\" : \"Forward, Side, Yaw in {-1,0,1}\"}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n        <div className={ classes.infoBoxColumn }>\r\n        <strong>Environment</strong>\r\n          <table className={classes.table}>\r\n            <tr>\r\n              <td className={classes.tdHead}>Generation:</td>\r\n              <td className={classes.td}>{structured ? \"Static\" : \"Random\"}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className={classes.tdHead}>Description:</td>\r\n              <td className={classes.td}>{environmentDescription}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  </div>);\r\n}\r\n\r\nexport default Panel","import React, { useState, useRef } from 'react';\r\nimport Unity, { UnityContent } from \"react-unity-webgl\";\r\nimport Filter3 from '@material-ui/icons/Filter3';\r\nimport ScatterPlot from '@material-ui/icons/ScatterPlot';\r\nimport ViewQuilt from '@material-ui/icons/ViewQuilt';\r\nimport VideoCall from '@material-ui/icons/VideoCall';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport SlideshowIcon from '@material-ui/icons/Slideshow';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport TemplatePage from './TemplatePage';\r\nimport Panel from './Panel';\r\nimport Description from './Description';\r\nimport About from './pages/About';\r\n\r\nconst style = {\r\n  row: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  column: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  block: {\r\n    display: 'block'\r\n  }\r\n}\r\n\r\nconst unityContent = new UnityContent(\r\n  \"build/Build/build001.json\",\r\n  \"build/Build/UnityLoader.js\",\r\n  {\r\n    unityVersion: \"2019.2\"\r\n  }\r\n);\r\n\r\nconst setMenuIndex = (setMenuSelectedIndex, id) => {\r\n  setMenuSelectedIndex(id);\r\n}\r\n\r\nconst goTo = (_, __, href) => {\r\n  window.open(href, '_blank');\r\n}\r\n\r\nconst changeScene = (unityContent, scene) => {\r\n  unityContent.send(\r\n    \"Academy\", \r\n    \"changeScene\",\r\n    scene\r\n  );\r\n}\r\n\r\nconst activateDraw = (setRayActivated, unityContent, activated) => {\r\n  setRayActivated(activated);\r\n  unityContent.send(\r\n    \"Academy\", \r\n    \"activateDraw\",\r\n    `${activated}`\r\n  );\r\n}\r\n\r\nconst toggleCamView = (setCamView, unityContent, checked) => {\r\n  setCamView(checked);\r\n  unityContent.send(\r\n    \"Academy\", \r\n    \"switchCam\"\r\n  );\r\n}\r\n\r\nconst menu = [\r\n  {\r\n   name: 'Lidar RG',\r\n   icon: <ScatterPlot />,\r\n   id: 0,\r\n   onClick: setMenuIndex,\r\n   scene: \"InferenceScene\",\r\n   structured: false,\r\n   lidars: true,\r\n   dims3: false,\r\n   environmentDesc: \"50x50u platform with randomly placed agent and obstacles\"\r\n  },\r\n  {\r\n   name: 'Camera RG',\r\n   icon: <VideoCall />,\r\n   id: 1,\r\n   onClick: setMenuIndex,\r\n   scene: \"CameraInferenceScene\",\r\n   structured: false,\r\n   lidars: false,\r\n   dims3: false,\r\n   environmentDesc: \"50x50u platform with randomly placed agent and obstacles\"\r\n  },\r\n  {\r\n   name: 'Rooms',\r\n   icon: <ViewQuilt />,\r\n   id: 2,\r\n   onClick: setMenuIndex,\r\n   scene: \"TestStructuredScene\",\r\n   structured: true,\r\n   lidars: true,\r\n   dims3: false,\r\n   environmentDesc: \"Two rooms connected by a 10u-wide opening\"\r\n  },\r\n  {\r\n    name: 'Corridor',\r\n    icon: <ForwardIcon />,\r\n    id: 3,\r\n    onClick: setMenuIndex,\r\n    scene: \"TestStructuredSceneCorridor\",\r\n    structured: true,\r\n    lidars: true,\r\n    dims3: false,\r\n    environmentDesc: \"Straight corridor 22u-wide\"\r\n  },\r\n  {\r\n    name: 'CorridorTight',\r\n    icon: <ArrowForwardIcon />,\r\n    id: 4,\r\n    onClick: setMenuIndex,\r\n    scene: \"TestStructuredSceneCorridorTight\",\r\n    structured: true,\r\n    lidars: true,\r\n    dims3: false,\r\n    environmentDesc: \"Straight corridor 12u-wide\"\r\n  },\r\n  {\r\n    name: 'Turn',\r\n    icon: <SubdirectoryArrowRightIcon />,\r\n    id: 5,\r\n    onClick: setMenuIndex,\r\n    scene: \"TestStructuredSceneTurn\",\r\n    structured: true,\r\n    lidars: true,\r\n    dims3: false,\r\n    environmentDesc: \"Corridor 22u-wide including a 90° left turn\"\r\n  },\r\n  {\r\n    name: 'Crossroad',\r\n    icon: <OpenWithIcon />,\r\n    id: 6,\r\n    onClick: setMenuIndex,\r\n    scene: \"TestStructuredSceneCrossroad\",\r\n    structured: true,\r\n    lidars: true,\r\n    dims3: false,\r\n    environmentDesc: \"Intersection of two corridors 20u-wide, random agent spawn\"\r\n  },\r\n  {\r\n   name: '3D Lidar RG',\r\n   icon: <Filter3 />,\r\n   id: 7,\r\n   onClick: setMenuIndex,\r\n   scene: \"InferenceScene3D\",\r\n   structured: false,\r\n   lidars: true,\r\n   dims3: true,\r\n   environmentDesc: \"Empty cube 50x50x50u with randomly generate obstacles\"\r\n  },\r\n];\r\n\r\nconst menuSecond = [\r\n /*{\r\n  name: 'About',\r\n  icon: <People />,\r\n  id: 3,\r\n  onClick: setMenuIndex,\r\n  Page: About\r\n },*/\r\n {\r\n  name: 'Report',\r\n  icon: <DescriptionIcon />,\r\n  id: 100,\r\n  onClick: goTo,\r\n  href: 'https://github.com/nhabbash/autonomous-exploration-agent/blob/master/docs/report.pdf'\r\n },\r\n {\r\n  name: 'Slides',\r\n  icon: <SlideshowIcon />,\r\n  id: 101,\r\n  onClick: goTo,\r\n  href: 'https://github.com/nhabbash/autonomous-exploration-agent/blob/master/docs/presentation.pdf'\r\n },\r\n];\r\n\r\nconst requestMenuChange = (setRayActivated, setCamView, setMenuSelectedIndex, canvasContainer, unityContent, id, ...params) => {\r\n    const menuItem = menu.find(x => x.id === id);\r\n    if(menuItem && menuItem.scene && canvasContainer.current) {\r\n      const canvas = canvasContainer.current.htmlElement.children[0];\r\n      const width = canvas.getAttribute('width');\r\n      const height = canvas.getAttribute('height');\r\n      changeScene(unityContent, menuItem.scene);\r\n\r\n      setTimeout(() => {\r\n        canvas.setAttribute('width', width);\r\n        canvas.setAttribute('height', height);\r\n        setCamView(false)\r\n        if(menuItem.lidars)\r\n          activateDraw(setRayActivated, unityContent, true);\r\n        else\r\n          activateDraw(setRayActivated, unityContent, false);\r\n      }, 20);\r\n    }\r\n    setMenuSelectedIndex(id, ...params);\r\n}\r\n\r\nconst getMenu = () => [...menu, ...menuSecond]\r\n\r\nconst App = (props) => { \r\n  const [menuSelectedIndex, setMenuSelectedIndex] = useState(0);\r\n  const [rayActivated, setRayActivated] = useState(true);\r\n  const [camView, setCamView] = useState(false);\r\n  const canvasContainer = useRef(null);\r\n\r\n  return (\r\n    <TemplatePage\r\n      menu={menu}\r\n      menuSecond={menuSecond}\r\n      getMenu={getMenu}\r\n      menuSelectedIndex={menuSelectedIndex}\r\n      setMenuSelectedIndex={(...params) => requestMenuChange(setRayActivated, setCamView, setMenuSelectedIndex, canvasContainer, unityContent, ...params)}\r\n      {...props}\r\n      render={() => {\r\n        const Element = getMenu().find(x => x.id === menuSelectedIndex);\r\n        return (<div style={style.column}>\r\n          <h1 style={{ fontWeight: 500 }}>{Element.name}</h1>\r\n          {menuSecond.map(x => x.id).indexOf(Element.id) !== -1 ? (\r\n            <Element.Page title={Element.name} />\r\n          ) : (\r\n            <>\r\n              <div style={style.row}>\r\n                <div style={{ width: \"60%\", minWidth: 800 }}>\r\n                  <span style={style.block}>\r\n                    <Unity unityContent={unityContent} ref={(r) => { canvasContainer.current = r }} />\r\n                  </span>\r\n                </div>\r\n                <Panel\r\n                  unityContent={unityContent}\r\n                  contentId={Element.id}\r\n                  lidars={Element.lidars}\r\n                  dims3={Element.dims3}\r\n                  environmentDescription={Element.environmentDesc}\r\n                  structured={menu.filter(x => x.structured).map(x => x.id).indexOf(Element.id) !== -1}\r\n                  rayActivated={rayActivated}\r\n                  toggleRay={(checked) => activateDraw(setRayActivated, unityContent, checked)}\r\n                  camView={camView}\r\n                  setCamView={(checked) => toggleCamView(setCamView, unityContent, checked)}\r\n                />\r\n              </div>\r\n              {/* <Description demo={Element} /> */}\r\n            </>\r\n          )}\r\n          </div>);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    padding: '24px 0',\r\n    display: 'flex',\r\n    flex: 2\r\n  },\r\n}))\r\n\r\n\r\nconst Panel = ({  ...others }) => { \r\n  const classes = useStyles();\r\n\r\n  return (<div className={classes.container}>\r\n    <Paper elevation={3} classes={{ root: classes.paperRoot }} {...others}>\r\n     test\r\n    </Paper>\r\n  </div>);\r\n}\r\n\r\nexport default Panel","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}